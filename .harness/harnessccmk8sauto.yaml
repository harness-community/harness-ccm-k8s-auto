pipeline:
  name: harness-ccm-k8s-auto
  identifier: harnessccmk8sauto
  projectIdentifier: utilities
  orgIdentifier: Harness_Community
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: org.harness_community_github
        repoName: harness-ccm-k8s-auto
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: black
                  identifier: black
                  spec:
                    connectorRef: org.harness_community_dockerhub
                    image: pyfound/black:latest_release
                    shell: Sh
                    command: black --check .
              - step:
                  type: BuildAndPushDockerRegistry
                  name: build and push
                  identifier: build_and_push
                  spec:
                    connectorRef: org.harness_community_dockerhub
                    repo: harnesscommunity/harness-ccm-k8s-auto
                    tags:
                      - "<+<+trigger.event> == \"PUSH\" ? \"latest\" : \"test\">"
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: harnessccmk8sauto
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      sources:
                        - identifier: main
                          type: DockerRegistry
                          spec:
                            tag: <+pipeline.stages.build.spec.execution.steps.build_and_push.spec.tags[0]>
                            digest: <+input>
          environment:
            environmentRef: development
            deployToAll: false
            infrastructureDefinitions:
              - identifier: sagcp
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
